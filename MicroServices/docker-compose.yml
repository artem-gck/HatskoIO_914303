version: "3.9"
services:
    user_info_api:
        build: 
            context: .
            dockerfile: UserInfoService/Dockerfile
        ports:
            - "8000:80"
            - "8001:443"
        environment:
            ASPNETCORE_URLS: "https://+;http://+"
            ASPNETCORE_HTTPS_PORT: "8001"
            ASPNETCORE_ENVIRONMENT: "Development"
            ASPNETCORE_Kestrel__Certificates__Default__Password: "mypass123"
            ASPNETCORE_Kestrel__Certificates__Default__Path: "/https/aspnetapp.pfx"
        volumes:
            - C:\Users\agats\.aspnet\https:/https/
        depends_on:
            - user_info_sql

    structure_api:
        build:
            context: .
            dockerfile: StructureService/Dockerfile
        ports:
            - "8002:80"
            - "8003:443"
        environment:
            ASPNETCORE_URLS: "https://+;http://+"
            ASPNETCORE_HTTPS_PORT: "8003"
            ASPNETCORE_ENVIRONMENT: "Development"
            ASPNETCORE_Kestrel__Certificates__Default__Password: "mypass123"
            ASPNETCORE_Kestrel__Certificates__Default__Path: "/https/aspnetapp.pfx"
        volumes:
            - C:\Users\agats\.aspnet\https:/https/
        depends_on: 
            - structure_sql

    tasks_api:
        build:
            context: .
            dockerfile: TaskCrudService/Dockerfile
        ports:
            - "8004:80"
            - "8005:443"
        environment:
            ASPNETCORE_URLS: "https://+;http://+"
            ASPNETCORE_HTTPS_PORT: "8005"
            ASPNETCORE_ENVIRONMENT: "Development"
            ASPNETCORE_Kestrel__Certificates__Default__Password: "mypass123"
            ASPNETCORE_Kestrel__Certificates__Default__Path: "/https/aspnetapp.pfx"
        volumes:
            - C:\Users\agats\.aspnet\https:/https/
        depends_on:
            - tasks_sql

    documents_api:
        build:
            context: .
            dockerfile: DocumentCrudService/Dockerfile
        ports:
            - "8006:80"
            - "8007:443"
        environment:
            ASPNETCORE_URLS: "https://+;http://+"
            ASPNETCORE_HTTPS_PORT: "8007"
            ASPNETCORE_ENVIRONMENT: "Development"
            ASPNETCORE_Kestrel__Certificates__Default__Password: "mypass123"
            ASPNETCORE_Kestrel__Certificates__Default__Path: "/https/aspnetapp.pfx"
        volumes:
            - C:\Users\agats\.aspnet\https:/https/
        depends_on:
            - documents_mongo

    company_management_api:
        build:
            context: .
            dockerfile: CompanyManagementService/Dockerfile
        ports:
            - "8008:80"
            - "8009:443"
        environment:
            ASPNETCORE_URLS: "https://+;http://+"
            ASPNETCORE_HTTPS_PORT: "8009"
            ASPNETCORE_ENVIRONMENT: "Development"
            ASPNETCORE_Kestrel__Certificates__Default__Password: "mypass123"
            ASPNETCORE_Kestrel__Certificates__Default__Path: "/https/aspnetapp.pfx"
        volumes:
            - C:\Users\agats\.aspnet\https:/https/
        depends_on:
            - company_management_redis
            - user_info_api
            - structure_api

    notification_api:
        build:
            context: .
            dockerfile: NotificationService/Dockerfile
        ports:
            - "8010:80"
            - "8011:443"
        environment:
            ASPNETCORE_URLS: "https://+;http://+"
            ASPNETCORE_HTTPS_PORT: "8011"
            ASPNETCORE_ENVIRONMENT: "Development"
            ASPNETCORE_Kestrel__Certificates__Default__Password: "mypass123"
            ASPNETCORE_Kestrel__Certificates__Default__Path: "/https/aspnetapp.pfx"
        volumes:
            - C:\Users\agats\.aspnet\https:/https/
        depends_on:
            - company_management_api
            - tasks_api

    nginx-proxy:
        image: jwilder/nginx-proxy
        container_name: nginx
        ports:
            - '80:80'
            - '443:443'
        volumes:
            - '/var/run/docker.sock:/tmp/docker.sock:ro'
            - './IdentityServer4.Admin/shared/nginx/vhost.d:/etc/nginx/vhost.d'
            - './IdentityServer4.Admin/shared/nginx/certs:/etc/nginx/certs:ro'
        networks:
            proxy: null
            identityserverui:
                aliases:
                    - sts.skoruba.local
                    - admin.skoruba.local
                    - admin-api.skoruba.local
        restart: always

    skoruba.identityserver4.admin:
        image: '${DOCKER_REGISTRY-}skoruba-identityserver4-admin'
        build:
            context: .
            dockerfile: IdentityServer4.Admin/src/Skoruba.IdentityServer4.Admin/Dockerfile
        container_name: skoruba-identityserver4-admin
        environment:
            - VIRTUAL_HOST=admin.skoruba.local
            - 'ConnectionStrings__ConfigurationDbConnection=Server=identity_sql;Database=IdentityServer4Admin;User Id=sa;Password=${DB_PASSWORD:-Password_123};MultipleActiveResultSets=true'
            - 'ConnectionStrings__PersistedGrantDbConnection=Server=identity_sql;Database=IdentityServer4Admin;User Id=sa;Password=${DB_PASSWORD:-Password_123};MultipleActiveResultSets=true'
            - 'ConnectionStrings__IdentityDbConnection=Server=identity_sql;Database=IdentityServer4Admin;User Id=sa;Password=${DB_PASSWORD:-Password_123};MultipleActiveResultSets=true'
            - 'ConnectionStrings__AdminLogDbConnection=Server=identity_sql;Database=IdentityServer4Admin;User Id=sa;Password=${DB_PASSWORD:-Password_123};MultipleActiveResultSets=true'
            - 'ConnectionStrings__AdminAuditLogDbConnection=Server=identity_sql;Database=IdentityServer4Admin;User Id=sa;Password=${DB_PASSWORD:-Password_123};MultipleActiveResultSets=true'
            - 'ConnectionStrings__DataProtectionDbConnection=Server=identity_sql;Database=IdentityServer4Admin;User Id=sa;Password=${DB_PASSWORD:-Password_123};MultipleActiveResultSets=true'
            - 'AdminConfiguration__IdentityAdminBaseUrl=https://admin.skoruba.local'
            - 'AdminConfiguration__IdentityAdminRedirectUri=https://admin.skoruba.local/signin-oidc'
            - 'AdminConfiguration__IdentityServerBaseUrl=https://sts.skoruba.local'
            - AdminConfiguration__RequireHttpsMetadata=false
            - 'IdentityServerData__Clients__0__ClientUri=https://admin.skoruba.local'
            - 'IdentityServerData__Clients__0__RedirectUris__0=https://admin.skoruba.local/signin-oidc'
            - 'IdentityServerData__Clients__0__FrontChannelLogoutUri=https://admin.skoruba.local/signin-oidc'
            - 'IdentityServerData__Clients__0__PostLogoutRedirectUris__0=https://admin.skoruba.local/signout-callback-oidc'
            - 'IdentityServerData__Clients__0__AllowedCorsOrigins__0=https://admin.skoruba.local'
            - 'IdentityServerData__Clients__1__RedirectUris__0=https://admin-api.skoruba.local/swagger/oauth2-redirect.html'
            - 'Serilog__WriteTo__1__Args__connectionString=Server=identity_sql;Database=IdentityServer4Admin;User Id=sa;Password=${DB_PASSWORD:-Password_123};MultipleActiveResultSets=true'
            - DockerConfiguration__UpdateCaCertificate=true
            - ASPNETCORE_ENVIRONMENT=Development
        command: dotnet Skoruba.IdentityServer4.Admin.dll /seed
        depends_on:
            - identity_sql
            - skoruba.identityserver4.sts.identity
        volumes:
            - './IdentityServer4.Admin/shared/serilog.json:/app/serilog.json'
            - './IdentityServer4.Admin/shared/identitydata.json:/app/identitydata.json'
            - './IdentityServer4.Admin/shared/identityserverdata.json:/app/identityserverdata.json'
            - './IdentityServer4.Admin/shared/nginx/certs/cacerts.crt:/usr/local/share/ca-certificates/cacerts.crt'
        networks:
            identityserverui: null

    skoruba.identityserver4.admin.api:
        image: '${DOCKER_REGISTRY-}skoruba-identityserver4-admin-api'
        build:
            context: .
            dockerfile: IdentityServer4.Admin/src/Skoruba.IdentityServer4.Admin.Api/Dockerfile
        container_name: skoruba-identityserver4-admin-api
        environment:
            - VIRTUAL_HOST=admin-api.skoruba.local
            - AdminApiConfiguration__RequireHttpsMetadata=false
            - 'AdminApiConfiguration__ApiBaseUrl=https://admin-api.skoruba.local'
            - 'AdminApiConfiguration__IdentityServerBaseUrl=https://sts.skoruba.local'
            - 'ConnectionStrings__ConfigurationDbConnection=Server=identity_sql;Database=IdentityServer4Admin;User Id=sa;Password=${DB_PASSWORD:-Password_123};MultipleActiveResultSets=true'
            - 'ConnectionStrings__PersistedGrantDbConnection=Server=identity_sql;Database=IdentityServer4Admin;User Id=sa;Password=${DB_PASSWORD:-Password_123};MultipleActiveResultSets=true'
            - 'ConnectionStrings__IdentityDbConnection=Server=identity_sql;Database=IdentityServer4Admin;User Id=sa;Password=${DB_PASSWORD:-Password_123};MultipleActiveResultSets=true'
            - 'ConnectionStrings__AdminLogDbConnection=Server=identity_sql;Database=IdentityServer4Admin;User Id=sa;Password=${DB_PASSWORD:-Password_123};MultipleActiveResultSets=true'
            - 'ConnectionStrings__AdminAuditLogDbConnection=Server=identity_sql;Database=IdentityServer4Admin;User Id=sa;Password=${DB_PASSWORD:-Password_123};MultipleActiveResultSets=true'
            - 'ConnectionStrings__DataProtectionDbConnection=Server=identity_sql;Database=IdentityServer4Admin;User Id=sa;Password=${DB_PASSWORD:-Password_123};MultipleActiveResultSets=true'
            - DockerConfiguration__UpdateCaCertificate=true
            - ASPNETCORE_ENVIRONMENT=Development
        volumes:
            - './IdentityServer4.Admin/shared/serilog.json:/app/serilog.json'
            - './IdentityServer4.Admin/shared/nginx/certs/cacerts.crt:/usr/local/share/ca-certificates/cacerts.crt'
        networks:
            identityserverui: null

    skoruba.identityserver4.sts.identity:
        image: '${DOCKER_REGISTRY-}skoruba-identityserver4-sts-identity'
        build:
            context: .
            dockerfile: IdentityServer4.Admin/src/Skoruba.IdentityServer4.STS.Identity/Dockerfile
        container_name: skoruba-identityserver4-sts-identity
        environment:
            - VIRTUAL_HOST=sts.skoruba.local
            - 'ConnectionStrings__ConfigurationDbConnection=Server=identity_sql;Database=IdentityServer4Admin;User Id=sa;Password=${DB_PASSWORD:-Password_123};MultipleActiveResultSets=true'
            - 'ConnectionStrings__PersistedGrantDbConnection=Server=identity_sql;Database=IdentityServer4Admin;User Id=sa;Password=${DB_PASSWORD:-Password_123};MultipleActiveResultSets=true'
            - 'ConnectionStrings__IdentityDbConnection=Server=identity_sql;Database=IdentityServer4Admin;User Id=sa;Password=${DB_PASSWORD:-Password_123};MultipleActiveResultSets=true'
            - 'ConnectionStrings__DataProtectionDbConnection=Server=identity_sql;Database=IdentityServer4Admin;User Id=sa;Password=${DB_PASSWORD:-Password_123};MultipleActiveResultSets=true'
            - 'AdminConfiguration__IdentityAdminBaseUrl=https://admin.skoruba.local'
            - 'IdentityServerOptions__IssuerUri=https://sts.skoruba.local'
            - IdentityServerOptions__Events__RaiseErrorEvents=true
            - IdentityServerOptions__Events__RaiseInformationEvents=true
            - IdentityServerOptions__Events__RaiseFailureEvents=true
            - IdentityServerOptions__Events__RaiseSuccessEvents=true
            - DockerConfiguration__UpdateCaCertificate=true
            - ASPNETCORE_ENVIRONMENT=Development
        depends_on:
            - identity_sql  
        volumes:
            - './IdentityServer4.Admin/shared/serilog.json:/app/serilog.json'
            - './IdentityServer4.Admin/shared/nginx/certs/cacerts.crt:/usr/local/share/ca-certificates/cacerts.crt'
        networks:
            identityserverui:
                aliases:
                    - sts.skoruba.local

    user_info_sql:
        image: "mcr.microsoft.com/mssql/server"
        environment:
            SA_PASSWORD: "yourStrong(!)Password"
            ACCEPT_EULA: "Y"

    structure_sql:
        image: "mcr.microsoft.com/mssql/server"
        environment:
            SA_PASSWORD: "yourStrong(!)Password"
            ACCEPT_EULA: "Y"

    tasks_sql:
        image: "mcr.microsoft.com/mssql/server"
        environment:
            SA_PASSWORD: "yourStrong(!)Password"
            ACCEPT_EULA: "Y"

    identity_sql:
        image: 'mcr.microsoft.com/mssql/server:2017-CU20-ubuntu-16.04'
        ports:
            - '7900:1433'
        container_name: skoruba-identityserver4-db
        environment:
            SA_PASSWORD: '${DB_PASSWORD:-Password_123}'
            ACCEPT_EULA: 'Y'
        volumes:
            - 'dbdata:/var/opt/mssql'
        networks:
            identityserverui: null

    documents_mongo:
        image: "mongo"
    
    company_management_redis:
        image: "redis"

volumes:
  dbdata:
    driver: local
networks:
  proxy:
    driver: bridge
  identityserverui:
    driver: bridge