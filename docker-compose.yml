version: "3.9"
services:
    user_info:
        container_name: user_info_api
        # ports: 
        #     - "8080:443"
        build: 
            context: .
            dockerfile: MicroServices/UserInfoService/Dockerfile
        environment:
            # VIRTUAL_HOST: "userinfo.skoruba.local"
            UserInfoConnection: "Server=user_info_sql;Database=master;User=SA;Password=yourStrong(!)Password"
            ServiceBus: "Endpoint=sb://document-flow.servicebus.windows.net/;SharedAccessKeyName=RootManageSharedAccessKey;SharedAccessKey=zO0k11w9rZVQaZZh30b8EzXuYbScCLgzbdb2jsVGkNo="
            IdentityPath: "https://sts.skoruba.local"
            ASPNETCORE_URLS: "https://+;http://+"
            ASPNETCORE_ENVIRONMENT: "Development"
            ASPNETCORE_Kestrel__Certificates__Default__Password: "password"
            ASPNETCORE_Kestrel__Certificates__Default__Path: "/https/aspnetapp.pfx"
        volumes:
            - C:\Users\agats\.aspnet\https:/https/
        depends_on:
            - user_info_sql
        networks:
            identityserverui: null

    structure:
        container_name: structure_api
        # ports: 
        #     - "8082:443"
        build:
            context: .
            dockerfile: MicroServices/StructureService/Dockerfile
        environment:
            StructureConnection: "Server=structure_sql;Database=structure;User=SA;Password=yourStrong(!)Password"
            ServiceBus: "Endpoint=sb://document-flow.servicebus.windows.net/;SharedAccessKeyName=RootManageSharedAccessKey;SharedAccessKey=zO0k11w9rZVQaZZh30b8EzXuYbScCLgzbdb2jsVGkNo="
            ASPNETCORE_URLS: "https://+;http://+"
            IdentityPath: "https://sts.skoruba.local"
            ASPNETCORE_ENVIRONMENT: "Development"
            ASPNETCORE_Kestrel__Certificates__Default__Password: "password"
            ASPNETCORE_Kestrel__Certificates__Default__Path: "/https/aspnetapp.pfx"
        volumes:
            - C:\Users\agats\.aspnet\https:/https/
        depends_on: 
            - structure_sql
        networks:
            identityserverui: null

    tasks:
        container_name: tasks_api
        # ports: 
        #     - "8083:443"
        build:
            context: .
            dockerfile: MicroServices/TaskCrudService/Dockerfile
        environment:
            ServiceBus: "Endpoint=sb://document-flow.servicebus.windows.net/;SharedAccessKeyName=RootManageSharedAccessKey;SharedAccessKey=zO0k11w9rZVQaZZh30b8EzXuYbScCLgzbdb2jsVGkNo="
            TasksConnection: "Server=tasks_sql;Database=master;User=SA;Password=yourStrong(!)Password"
            IdentityPath: "https://sts.skoruba.local"
            ASPNETCORE_URLS: "https://+;http://+"
            ASPNETCORE_ENVIRONMENT: "Development"
            ASPNETCORE_Kestrel__Certificates__Default__Password: "password"
            ASPNETCORE_Kestrel__Certificates__Default__Path: "/https/aspnetapp.pfx"
        volumes:
            - C:\Users\agats\.aspnet\https:/https/
        depends_on:
            - tasks_sql
        networks:
            identityserverui: null

    documents:
        container_name: documents_api
        # ports:
        #     - "8081:443"
        build:
            context: .
            dockerfile: MicroServices/DocumentCrudService/Dockerfile
        environment:
            # VIRTUAL_HOST: "documents.skoruba.local"
            DocumentsConnection: "mongodb://documents_mongo/documents"
            IdentityPath: "https://sts.skoruba.local"
            ASPNETCORE_URLS: "https://+;http://+"
            ASPNETCORE_ENVIRONMENT: "Development"
            ASPNETCORE_Kestrel__Certificates__Default__Password: "password"
            ASPNETCORE_Kestrel__Certificates__Default__Path: "/https/aspnetapp.pfx"
            DockerConfiguration__UpdateCaCertificate: true
        volumes:
            - C:\Users\agats\.aspnet\https:/https/
        depends_on:
            - documents_mongo
        networks:
            identityserverui: null

    company_management:
        container_name: company_management_api
        # ports:
        #     - "8084:443"
        build:
            context: .
            dockerfile: MicroServices/CompanyManagementService/Dockerfile
        environment:
            IdentityPath: "https://sts.skoruba.local"
            CacheConnection: "company_management_redis"
            DepartmentsConnection: "https://structure/api/departments/"
            UsersStructureConnection: "https://structure/api/departments/"
            PositionsConnection: "https://structure/api/positions/"
            UsersInfoConnection: "https://user_info/api/"
            ASPNETCORE_URLS: "https://+;http://+"
            ASPNETCORE_ENVIRONMENT: "Development"
            ASPNETCORE_Kestrel__Certificates__Default__Password: "password"
            ASPNETCORE_Kestrel__Certificates__Default__Path: "/https/aspnetapp.pfx"
        volumes:
            - C:\Users\agats\.aspnet\https:/https/
        depends_on:
            - company_management_redis
            - user_info
            - structure
        networks:
            identityserverui: null

    notification:
        container_name: notification_api
        build:
            context: .
            dockerfile: MicroServices/NotificationService/Dockerfile
        environment:
            ServiceBus: "Endpoint=sb://document-flow.servicebus.windows.net/;SharedAccessKeyName=RootManageSharedAccessKey;SharedAccessKey=zO0k11w9rZVQaZZh30b8EzXuYbScCLgzbdb2jsVGkNo="
            NotificationConnection: "Filename=Messages.db"
            IdentityPath: "https://sts.skoruba.local"
            SenderEmail: "qwe@gmail.com"
            SenderPassword: "qweqweqwe"
            SenderHost: "smtp.gmail.com"
            ASPNETCORE_URLS: "https://+;http://+"
            ASPNETCORE_ENVIRONMENT: "Development"
            ASPNETCORE_Kestrel__Certificates__Default__Password: "password"
            ASPNETCORE_Kestrel__Certificates__Default__Path: "/https/aspnetapp.pfx"
        volumes:
            - C:\Users\agats\.aspnet\https:/https/
        networks:
            identityserverui: null

    signatures:
        container_name: signatures_api
        # ports:
        #     - "8085:443"
        build:
            context: .
            dockerfile: MicroServices/SignatureService/Dockerfile
        environment:
            IdentityPath: "https://sts.skoruba.local"
            SignaturesConnection: "Data Source=signatures_sql;Initial Catalog=master;User=SA;Password=yourStrong(!)Password;TrustServerCertificate=True"
            DocumentServiceConnection: "https://documents/api/documents/"
            ServiceBus: "Endpoint=sb://document-flow.servicebus.windows.net/;SharedAccessKeyName=RootManageSharedAccessKey;SharedAccessKey=zO0k11w9rZVQaZZh30b8EzXuYbScCLgzbdb2jsVGkNo="
            ASPNETCORE_URLS: "https://+;http://+"
            ASPNETCORE_ENVIRONMENT: "Development"
            ASPNETCORE_Kestrel__Certificates__Default__Password: "password"
            ASPNETCORE_Kestrel__Certificates__Default__Path: "/https/aspnetapp.pfx"
        volumes:
            - C:\Users\agats\.aspnet\https:/https/
        depends_on:
            - documents
            - signatures_sql
        networks:
            identityserverui: null

    api-gateway:
        container_name: api-gateway
        build:
            context: .
            dockerfile: ApiGateway/Dockerfile
        ports:
            - "8004:80"
            - "8005:443"
        environment:
            ASPNETCORE_URLS: "https://+;http://+"
            ASPNETCORE_HTTPS_PORT: "8005"
            ASPNETCORE_ENVIRONMENT: "Production"
            ASPNETCORE_Kestrel__Certificates__Default__Password: "password"
            ASPNETCORE_Kestrel__Certificates__Default__Path: "/https/aspnetapp.pfx"
        volumes:
            - C:\Users\agats\.aspnet\https:/https/
        depends_on:
            - user_info
            - structure
            - company_management
            - tasks
            - documents
            - signatures
        networks:
            identityserverui: null

    nginx-proxy:
        image: jwilder/nginx-proxy
        container_name: nginx
        ports: 
            - "80:80"
            - "443:443"
        volumes:
            - '/var/run/docker.sock:/tmp/docker.sock:ro'
            - './MicroServices/IdentityServer4.Admin/shared/nginx/vhost.d:/etc/nginx/vhost.d'
            - './MicroServices/IdentityServer4.Admin/shared/nginx/certs:/etc/nginx/certs:ro'
        networks:
            identityserverui:
                aliases:
                    - sts.skoruba.local
                    - admin.skoruba.local
                    - admin-api.skoruba.local
        restart: always

    skoruba.identityserver4.admin:
        image: '${DOCKER_REGISTRY-}skoruba-identityserver4-admin'
        build:
            context: .
            dockerfile: MicroServices/IdentityServer4.Admin/src/Skoruba.IdentityServer4.Admin/Dockerfile
        container_name: identityserver_admin
        environment:
            - VIRTUAL_HOST=admin.skoruba.local
            - 'ConnectionStrings__ConfigurationDbConnection=Server=identity_sql;Database=IdentityServer4Admin;User Id=sa;Password=${DB_PASSWORD:-Password_123};MultipleActiveResultSets=true'
            - 'ConnectionStrings__PersistedGrantDbConnection=Server=identity_sql;Database=IdentityServer4Admin;User Id=sa;Password=${DB_PASSWORD:-Password_123};MultipleActiveResultSets=true'
            - 'ConnectionStrings__IdentityDbConnection=Server=identity_sql;Database=IdentityServer4Admin;User Id=sa;Password=${DB_PASSWORD:-Password_123};MultipleActiveResultSets=true'
            - 'ConnectionStrings__AdminLogDbConnection=Server=identity_sql;Database=IdentityServer4Admin;User Id=sa;Password=${DB_PASSWORD:-Password_123};MultipleActiveResultSets=true'
            - 'ConnectionStrings__AdminAuditLogDbConnection=Server=identity_sql;Database=IdentityServer4Admin;User Id=sa;Password=${DB_PASSWORD:-Password_123};MultipleActiveResultSets=true'
            - 'ConnectionStrings__DataProtectionDbConnection=Server=identity_sql;Database=IdentityServer4Admin;User Id=sa;Password=${DB_PASSWORD:-Password_123};MultipleActiveResultSets=true'
            - 'AdminConfiguration__IdentityAdminBaseUrl=https://admin.skoruba.local'
            - 'AdminConfiguration__IdentityAdminRedirectUri=https://admin.skoruba.local/signin-oidc'
            - 'AdminConfiguration__IdentityServerBaseUrl=https://sts.skoruba.local'
            - AdminConfiguration__RequireHttpsMetadata=false
            - 'IdentityServerData__Clients__0__ClientUri=https://admin.skoruba.local'
            - 'IdentityServerData__Clients__0__RedirectUris__0=https://admin.skoruba.local/signin-oidc'
            - 'IdentityServerData__Clients__0__FrontChannelLogoutUri=https://admin.skoruba.local/signin-oidc'
            - 'IdentityServerData__Clients__0__PostLogoutRedirectUris__0=https://admin.skoruba.local/signout-callback-oidc'
            - 'IdentityServerData__Clients__0__AllowedCorsOrigins__0=https://admin.skoruba.local'
            - 'IdentityServerData__Clients__1__RedirectUris__0=https://admin-api.skoruba.local/swagger/oauth2-redirect.html'
            - 'Serilog__WriteTo__1__Args__connectionString=Server=identity_sql;Database=IdentityServer4Admin;User Id=sa;Password=${DB_PASSWORD:-Password_123};MultipleActiveResultSets=true'
            - DockerConfiguration__UpdateCaCertificate=true
            - ASPNETCORE_ENVIRONMENT=Development
        command: dotnet Skoruba.IdentityServer4.Admin.dll /seed
        depends_on:
            - identity_sql
            - skoruba.identityserver4.sts.identity
        volumes:
            - './MicroServices/IdentityServer4.Admin/shared/serilog.json:/app/serilog.json'
            - './MicroServices/IdentityServer4.Admin/shared/identitydata.json:/app/identitydata.json'
            - './MicroServices/IdentityServer4.Admin/shared/identityserverdata.json:/app/identityserverdata.json'
            - './MicroServices/IdentityServer4.Admin/shared/nginx/certs/cacerts.crt:/usr/local/share/ca-certificates/cacerts.crt'
        networks:
            identityserverui: null

    skoruba.identityserver4.admin.api:
        image: '${DOCKER_REGISTRY-}skoruba-identityserver4-admin-api'
        build:
            context: .
            dockerfile: MicroServices/IdentityServer4.Admin/src/Skoruba.IdentityServer4.Admin.Api/Dockerfile
        container_name: identityserver_admin_api
        environment:
            - VIRTUAL_HOST=admin-api.skoruba.local
            - AdminApiConfiguration__RequireHttpsMetadata=false
            - 'AdminApiConfiguration__ApiBaseUrl=https://admin-api.skoruba.local'
            - 'AdminApiConfiguration__IdentityServerBaseUrl=https://sts.skoruba.local'
            - 'ConnectionStrings__ConfigurationDbConnection=Server=identity_sql;Database=IdentityServer4Admin;User Id=sa;Password=${DB_PASSWORD:-Password_123};MultipleActiveResultSets=true'
            - 'ConnectionStrings__PersistedGrantDbConnection=Server=identity_sql;Database=IdentityServer4Admin;User Id=sa;Password=${DB_PASSWORD:-Password_123};MultipleActiveResultSets=true'
            - 'ConnectionStrings__IdentityDbConnection=Server=identity_sql;Database=IdentityServer4Admin;User Id=sa;Password=${DB_PASSWORD:-Password_123};MultipleActiveResultSets=true'
            - 'ConnectionStrings__AdminLogDbConnection=Server=identity_sql;Database=IdentityServer4Admin;User Id=sa;Password=${DB_PASSWORD:-Password_123};MultipleActiveResultSets=true'
            - 'ConnectionStrings__AdminAuditLogDbConnection=Server=identity_sql;Database=IdentityServer4Admin;User Id=sa;Password=${DB_PASSWORD:-Password_123};MultipleActiveResultSets=true'
            - 'ConnectionStrings__DataProtectionDbConnection=Server=identity_sql;Database=IdentityServer4Admin;User Id=sa;Password=${DB_PASSWORD:-Password_123};MultipleActiveResultSets=true'
            - DockerConfiguration__UpdateCaCertificate=true
            - ASPNETCORE_ENVIRONMENT=Development
        volumes:
            - './MicroServices/IdentityServer4.Admin/shared/serilog.json:/app/serilog.json'
            - './MicroServices/IdentityServer4.Admin/shared/nginx/certs/cacerts.crt:/usr/local/share/ca-certificates/cacerts.crt'
        networks:
            identityserverui: null

    skoruba.identityserver4.sts.identity:
        image: '${DOCKER_REGISTRY-}skoruba-identityserver4-sts-identity'
        build:
            context: .
            dockerfile: MicroServices/IdentityServer4.Admin/src/Skoruba.IdentityServer4.STS.Identity/Dockerfile
        container_name: identityserver_sts_identity
        environment:
            - ServiceBus=Endpoint=sb://document-flow.servicebus.windows.net/;SharedAccessKeyName=RootManageSharedAccessKey;SharedAccessKey=zO0k11w9rZVQaZZh30b8EzXuYbScCLgzbdb2jsVGkNo=
            - VIRTUAL_HOST=sts.skoruba.local
            - 'ConnectionStrings__ConfigurationDbConnection=Server=identity_sql;Database=IdentityServer4Admin;User Id=sa;Password=${DB_PASSWORD:-Password_123};MultipleActiveResultSets=true'
            - 'ConnectionStrings__PersistedGrantDbConnection=Server=identity_sql;Database=IdentityServer4Admin;User Id=sa;Password=${DB_PASSWORD:-Password_123};MultipleActiveResultSets=true'
            - 'ConnectionStrings__IdentityDbConnection=Server=identity_sql;Database=IdentityServer4Admin;User Id=sa;Password=${DB_PASSWORD:-Password_123};MultipleActiveResultSets=true'
            - 'ConnectionStrings__DataProtectionDbConnection=Server=identity_sql;Database=IdentityServer4Admin;User Id=sa;Password=${DB_PASSWORD:-Password_123};MultipleActiveResultSets=true'
            - 'AdminConfiguration__IdentityAdminBaseUrl=https://admin.skoruba.local'
            - 'IdentityServerOptions__IssuerUri=https://sts.skoruba.local'
            - IdentityServerOptions__Events__RaiseErrorEvents=true
            - IdentityServerOptions__Events__RaiseInformationEvents=true
            - IdentityServerOptions__Events__RaiseFailureEvents=true
            - IdentityServerOptions__Events__RaiseSuccessEvents=true
            - DockerConfiguration__UpdateCaCertificate=true
            - ASPNETCORE_ENVIRONMENT=Development
        depends_on:
            - identity_sql  
        volumes:
            - './MicroServices/IdentityServer4.Admin/shared/serilog.json:/app/serilog.json'
            - './MicroServices/IdentityServer4.Admin/shared/nginx/certs/cacerts.crt:/usr/local/share/ca-certificates/cacerts.crt'
        networks:
            identityserverui:
                aliases:
                    - sts.skoruba.local

    user_info_sql:
        container_name: user_info_sql
        image: "mcr.microsoft.com/mssql/server"
        environment:
            SA_PASSWORD: "yourStrong(!)Password"
            ACCEPT_EULA: "Y"
        networks:
            identityserverui: null

    structure_sql:
        container_name: structure_sql
        # ports:
        #     - "1433:1433"
        image: "mcr.microsoft.com/mssql/server"
        environment:
            SA_PASSWORD: "yourStrong(!)Password"
            ACCEPT_EULA: "Y"
        networks:
            identityserverui: null

    tasks_sql:
        container_name: tasks_sql
        image: "mcr.microsoft.com/mssql/server"
        environment:
            SA_PASSWORD: "yourStrong(!)Password"
            ACCEPT_EULA: "Y"
        networks:
            identityserverui: null

    signatures_sql:
        container_name: signatures_sql
        image: "mcr.microsoft.com/mssql/server"
        environment:
            SA_PASSWORD: "yourStrong(!)Password"
            ACCEPT_EULA: "Y"
        networks:
            identityserverui: null

    identity_sql:
        container_name: identity_sql
        image: 'mcr.microsoft.com/mssql/server:2017-CU20-ubuntu-16.04'
        environment:
            SA_PASSWORD: '${DB_PASSWORD:-Password_123}'
            ACCEPT_EULA: 'Y'
        volumes:
            - 'dbdata:/var/opt/mssql'
        networks:
            identityserverui: null

    documents_mongo:
        container_name: documents_mongo
        image: "mongo"
        networks:
            identityserverui: null

    
    company_management_redis:
        container_name: company_management_redis
        image: "redis"
        networks:
            identityserverui: null

volumes:
  dbdata:
    driver: local
networks:
  proxy:
    driver: bridge
  identityserverui:
    driver: bridge